
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keys-swedish.h"

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NAV     3
#define ADJ     4


&lt {
    tapping_term_ms = <200>;
    flavor = "tap-preferred";
};
&mt {
    tapping_term_ms = <200>;
    flavor = "tap-preferred";
};
&caps_word {
    continue-list = <SE_MINS SE_UNDS SE_AMPR SE_AE SE_OE SE_AA>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_caps {
            timeout-ms = <50>;
            key-positions = <16 19>;
            bindings = <&caps_word>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

};


/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp TAB       &kp Q      &kp W      &kp E      &kp R         &kp T                                                  &kp Y  &kp U  &kp I      &kp O    &kp P        &kp SE_AA
	&kp ESC    &hm LGUI A &hm LALT S &hm LCTL D &hm LSFT F    &kp G                                                  &kp H  &hm LSFT J  &hm LCTL K  &hm LALT L &hm LGUI SE_OE    &kp SE_AE
	&kp CAPS        &kp Z      &kp X      &kp C      &kp V         &kp B  &none &none        &none         &none          &kp N  &kp M  &kp COMMA  &kp DOT  &kp SE_QUES  &kp DEL
	              &kp K_LOCK   &trans  &kp BKSP   &lt LOWER SPC &lt RAISE LGUI              &lt LOWER DEL &lt RAISE RET  &mo NAV &none &lt ADJ K_PLAY_PAUSE
			>;

			sensor-bindings = <&inc_dec_cp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};


		lower_layer {
			bindings = <
	&trans    &kp EXCL    &kp SE_LBRC &kp SE_RBRC &kp SE_DQUO &kp PRCNT                                        &kp SE_AMPR  &kp SE_PLUS  &kp SE_LT   &kp SE_GT   &kp SE_ASTR  &kp SE_PIPE
	&kp LALT  &kp SE_SLSH &kp SE_LPRN &kp SE_RPRN &kp SE_QUOT &kp SE_GRV                                       &kp SE_AT    &kp SE_MINS  &kp SE_LCBR &kp SE_RCBR &kp SE_CIRC  &kp SE_ACUT
	&kp LCTL  &kp SE_BSLS &kp SE_ASTR &kp SE_DLR  &kp SE_SCLN &kp SE_HASH &trans &trans          &trans &trans &kp SE_TILD  &kp SE_UNDS  &kp SE_SCLN &kp SE_CLN  &kp SE_EQL   &kp SE_TILD
	                                      &trans      &trans      &trans      &trans &mo NAV          &trans &mo NAV &trans      &trans      &trans
			>;

			sensor-bindings = <&inc_dec_cp PGDN PGUP &inc_dec_kp PGDN PGUP >;
		};


		raise_layer {
			bindings = <
	&kp F7     &kp F8      &kp F9     &kp F10      &kp F11      &kp F12                                       &kp SE_ASTR &kp N7  &kp N8  &kp N9  &kp N0 &trans
	&kp F1     &kp F2      &kp F3     &kp F4       &kp F5       &kp F6                                        &kp SE_PLUS &kp N4  &kp N5  &kp N6  &trans &trans
	&trans     &kp SE_MICR &kp SE_PND &kp SE_EUR   &kp SE_DIAE  &kp SE_MICR &trans &trans     &trans  &trans  &kp SE_MINS &kp N1  &kp N2  &kp N3  &trans &trans
	                                  &trans       &trans       &trans      &mo NAV &trans     &mo NAV  &trans  &trans &kp N0  &trans
			>;

			sensor-bindings = <&inc_dec_cp PGDN PGUP &inc_dec_kp PGDN PGUP >;
		};


		nav_layer {
			bindings = <
	&trans     &trans     &trans     &trans       &trans       &trans                                     &kp HOME &kp PGDN &kp PGUP &kp END   &trans &ext_power EP_OFF
    &trans     &trans     &trans     &trans       &trans       &trans                                     &kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans &ext_power EP_ON
    &trans     &trans     &trans     &trans       &trans       &trans &trans &trans         &trans &trans &trans   &trans   &trans   &trans    &trans &ext_power EP_TOG
	                                 &trans       &trans       &trans &trans &trans         &trans &trans &trans   &trans   &trans
			>;

			sensor-bindings = <&inc_dec_cp PGDN PGUP &inc_dec_kp PGDN PGUP >;

		};


		adj_layer {
			bindings = <
                &bt BT_CLR &bt BT_PRV &bt BT_NXT &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2                   &trans &trans &trans &trans  &out OUT_TOG &ext_power EP_OFF
                &trans     &trans     &trans     &trans       &trans       &trans                         &trans &trans &trans &trans  &out OUT_BLE &ext_power EP_ON
    &trans     &trans     &trans     &trans       &trans       &trans &trans &trans         &trans &trans &trans &trans &trans &trans  &out OUT_USB &ext_power EP_TOG
	                                 &trans       &trans       &trans &trans &trans         &trans &trans &trans &trans &trans
			>;

			sensor-bindings = <&inc_dec_cp PGDN PGUP &inc_dec_kp PGDN PGUP >;
		};


	};
};
